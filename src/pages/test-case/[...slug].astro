---
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";
import SiteLayout from "#layouts/site-layout.astro";
import InputForm from "#components/input-form";
import TestLayout from "#layouts/test-layout.astro";
// import { getTestCaseGroupsPagination } from "#utils/functions/get-test-case-groups-pagination";
// import { getUrl } from "#utils/functions/get-url";
import { validTestList } from "#utils/functions/valid-test-list";
import { slug as githubSlug } from "github-slugger";

export const getStaticPaths = (async () => {
  // const testCaseGroups = await getCollection("testCaseGroups");
  const testCaseGroups = validTestList.map((d, idx) => {
    return {
      slug: githubSlug(d.baseline_name),
      data: {
        title: d.baseline_name,
        order: idx,
        description: "",
      },
    };
  });
  return testCaseGroups.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;
// const { Content } = await entry.render();

// const fields = await getCollection("testCases", ({ data }) => {
//   return data.group.slug === entry.slug;
// });

const fields = validTestList
  .filter((d) => githubSlug(d.baseline_name) === entry.slug)
  .map((d) => {
    return {
      data: {
        id: d.test_case_id,
        description: "",
        testName: d.test_procedure,
        expectedResult: d.expected_result,
        link: "",
      },
    };
  });

// const { prev, next } = getTestCaseGroupsPagination(entry.slug);
---

<SiteLayout>
  <TestLayout>
    <div class="display-flex">
      <!-- {
        prev ? (
          <div class="margin-bottom-4">
            <a
              class="usa-button usa-button--outline display-flex flex-align-center"
              href={getUrl(`/test-case/${prev.slug}`)}
            >
              <svg
                class="usa-icon"
                aria-hidden="true"
                focusable="false"
                role="img"
              >
                <use xlink:href="/assets/img/sprite.svg#navigate_before" />
              </svg>
              <span class="usa-sr-only">Back to</span>
              <span>{prev.data.title}</span>
            </a>
          </div>
        ) : null
      } -->
    </div>
    <div class="usa-prose">
      <div class="margin-bottom-4">
        <h1>{entry.data.title}</h1>
      </div>
      <!-- <Content /> -->
    </div>
    <div>
      <InputForm fields={fields} client:only="react" />
    </div>
    <div class="margin-top-4 display-flex">
      <!-- {
        prev ? (
          <a
            class="usa-button usa-button--outline display-flex flex-align-center"
            href={getUrl(`/test-case/${prev.slug}`)}
          >
            <svg
              class="usa-icon"
              aria-hidden="true"
              focusable="false"
              role="img"
            >
              <use xlink:href="/assets/img/sprite.svg#navigate_before" />
            </svg>
            <span class="usa-sr-only">Back to</span>
            <span>{prev.data.title}</span>
          </a>
        ) : null
      }
      {
        next ? (
          <a
            class="usa-button usa-button--outline display-flex flex-align-center margin-left-auto"
            href={getUrl(`/test-case/${next.slug}`)}
          >
            <span class="usa-sr-only">Continue to</span>
            <span>{next.data.title}</span>
            <svg
              class="usa-icon"
              aria-hidden="true"
              focusable="false"
              role="img"
            >
              <use xlink:href="/assets/img/sprite.svg#navigate_next" />
            </svg>
          </a>
        ) : null
      } -->
    </div>
  </TestLayout>
</SiteLayout>
